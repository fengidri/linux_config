#!/bin/python2.7
#encoding: utf8


import os
import tempfile
import time
import sys
import hashlib

import tty, termios

class g:
    addtional = None

def input(msg):
    sys.stdout.write(msg)

    fd = sys.stdin.fileno()
    old_settings = termios.tcgetattr(fd)
    try:
        tty.setraw(sys.stdin.fileno())
        ch = sys.stdin.read(1)
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)

    print ch

    return ch.lower()

def get_patch_key_path(index):
    parent_hash = os.popen('git log --pretty=format:%H -' + str(index + 1)).readlines()[-1].strip()
    branch = os.popen('git rev-parse --abbrev-ref HEAD').read().strip()
    path = os.path.realpath(os.getcwd())

    m = hashlib.md5()
    m.update(parent_hash)
    m.update(branch)
    m.update(path)
    h = m.hexdigest()
    return os.path.expanduser('~/.kernel_patch/%s' % h)

def commit_change(chash, msg = None):
    branch = os.popen('git rev-parse --abbrev-ref HEAD').read().strip()
    print("current branch: %s. goto commit %s. change it." % (branch, chash))

    cmd='git checkout %s' % chash
    os.system(cmd)
    if msg:
        f = '/tmp/tmp-kernel-patch-%s-%s'  % (time.time(), os.getpid())
        open(f, 'w').write(msg)

        cmd = 'git commit --amend -F %s'% f
        os.system(cmd)
    else:
        cmd='git commit --amend'
        os.system(cmd)

    cmd='git log --pretty=format:%H -1'
    new_commit_id = os.popen(cmd).read().strip()

    print("new commit hash: %s. goto back to branch %s, rebase it." % (new_commit_id, branch))

    cmd='git checkout %s' % branch
    os.system(cmd)

    cmd='git rebase %s' % new_commit_id
    os.system(cmd)

def save_msgid(patch, num):
    f = get_patch_key_path(num)
    if os.path.exists(f):
        return

    for line in open(patch).readlines():
        line = line.split()
        if line[0] == 'Message-Id:':
            msgid = line[1]
            break

    open(f, 'w').write(msgid)

def get_commit_hash(num):
    cmd='git log --pretty=format:%H -' + str(num)
    lines = os.popen(cmd).readlines()
    o = []
    for line in lines:
        o.append(line.strip())
    return o

def get_commit_body(chash):
    return os.popen('git log --pretty=format:%B -1 ' + chash).read()


def check_additional(chash):
    path = os.path.expanduser('~/.kernel_patch/addtion')
    if not os.path.exists(path):
        return

    body = get_commit_body(chash)

    if body.find('\n---') > -1:
        return

    if g.addtional:
        f = '/tmp/tmp-kernel-patch-%s-%s'  % (time.time(), os.getpid())
        a = open(path).read()
        open(f, 'w').write(a)
        os.system('vim ' + f )
        g.addtional = open(f).read()

    body = body + '\n\n---\n' + g.addtional

    commit_change(chash, body)


def send_email(patch):
    cmd = "git send-email %s --no-thread --suppress-cc=all"
    cmd = cmd % patch

    path = os.path.expanduser('~/.kernel_patch/email')
    if not os.path.exists(path):
        return

    print cmd

    lines = open(path).readlines()
    for e in lines:
        e = e.strip()
        print ('    ' + e)
        cmd = cmd + ' ' + e


    os.system(cmd)




prefix = sys.argv[1]
num = 1
if len(sys.argv) == 3:
    num = int(sys.argv[2])

if prefix.find("PATCH") == -1:
    print("prefix must include PATCH")
    sys.exit(-1)

chashs = get_commit_hash(num)

for h in chashs:
    check_additional(h)


cmd="git format-patch --thread=deep -%s --subject-prefix '%s'" % (num, prefix)

if num > 1:
    cmd = cmd + ' -n '

f = get_patch_key_path(num)
print(f)
if os.path.exists(f):
    char = input('Found last msgid, use it as the --in-reply-to Y/N: ')
    if char == 'y':
        cmd = cmd + " --in-reply-to '%s'" % open(f).read().strip()


print("make patch by cmd:\n$ %s" % cmd)

patchs = os.popen(cmd).readlines()
patchs = [x.strip() for x in patchs]
for p in patchs:
    print p

print('\n-----------------------------------------------------')
print("run ./scripits/checkpatch.pl")
for patch in patchs:
    print('---')
    os.system('./scripts/checkpatch.pl %s | grep total: ' % patch)



print('\n-----------------------------------------------------')
print('try this: https://www.nounplus.net/grammarcheck/')


print('\n-----------------------------------------------------')


char = input('Send Email Now: y/n:')

if char != 'y':
    sys.exit(0)

save_msgid(patchs[0], num)

for patch in patchs:
    send_email(patch)

